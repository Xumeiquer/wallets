version: '3'

tasks:
  default:
    cmds:
      - task: client
      - task: copy-assets
      - task: server
    
  devel:
    cmds:
      - task: client
      - task: copy-assets
      - task: dev-server

  client:
    env:
      GOOS: js
      GOARCH: wasm
    cmds:
      - task: mkdir
        vars: {FOLDER: "build"}
      - go generate .
      - find . -name "*_vgen.go" -exec goreturns -w {} \;
      - go build -o build/main.wasm webapp/main.go
      - cp "$(go env GOROOT)/misc/wasm/wasm_exec.js" build/wasm_exec.js

  build:
    cmds:
      - GOOS={{.GOOS}} GOARCH={{.GOARCH}} go build -o dist/server_{{.GOOS}}_{{.GOARCH}} server/main.go

  dev-server:
    cmds:
      - task: mkdir
        vars: {FOLDER: "dist"}
      - task: build
        vars: {GOOS: "darwin", GOARCH: "amd64"}

  server:
    cmds:
      - task: mkdir
        vars: {FOLDER: "dist"}
      - task: build
        vars: {GOOS: "windows", GOARCH: "amd64"}
      - task: build
        vars: {GOOS: "darwin", GOARCH: "amd64"}
      - task: build
        vars: {GOOS: "linux", GOARCH: "amd64"}
      - task: build
        vars: {GOOS: "linux", GOARCH: "arm"}
      - task: build
        vars: {GOOS: "linux", GOARCH: "arm64"}

  copy-assets:
    cmds:
      - task: mkdir
        vars: {FOLDER: "server/assets/app"}
      - cp -r assets/* server/assets/
      - cp build/* server/assets/app/

  clean:
    cmds:
      - find . -name "*_vgen.go" -exec rm -f {} \;
      - rm -rf server/assets
      - rm -rf build
      - rm -rf dist
  
  mkdir:
    cmds:
      - mkdir -p {{.FOLDER}}
  
  install-tools:
    cmds:
      - go get -u github.com/vugu/vugu
      - {{GOBIN}}vugu -install-tools