<div>
    <dashboard:DashboardSummary></dashboard:DashboardSummary>
    <dashboard:DashboardProfit></dashboard:DashboardProfit>
    <dashboard:DashboardCharts></dashboard:DashboardCharts>
</div>

<script type="application/x-go">
import (
    "fmt"

    "github.com/Xumeiquer/wallets/models"
    "github.com/Xumeiquer/wallets/webapp/middleware"
)

type Dashboard struct {
    middleware.StateRef
    middleware.LoaderRef

    ActiveWallet *models.Wallet `vugu:"data"`
}

func (d *Dashboard) Init() {
    fmt.Println("[DASHBOARD] Init")

    // There is no need for this, but it acts as pre-cache
    // right now dashboard is the "first" element that loads

    v, err := d.State.Get("activeWallet")
    if err == nil {
        wa, ok := v.(*models.Wallet)
        if ok {
            d.ActiveWallet = wa
            err = d.Loader.UpdateFundsData(d.ActiveWallet)
            if err != nil {
                js.Global().Get("alert").Invoke("Unbale to load funds data")
            }
        } else {
            js.Global().Get("alert").Invoke("Unbale to load the selected wallet")
        }
    } else {
        js.Global().Get("alert").Invoke("Unbale to load the selected wallet")
    }
}
</script>